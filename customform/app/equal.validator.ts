import {Directive, Attribute} from '@angular/core';import {NG_VALIDATORS, FormControl, Validator} from '@angular/forms';@Directive({    selector: '[validateEqual][ngModel]',    providers: [        { provide: NG_VALIDATORS, useExisting: EqualValidator, multi: true }    ]})export class EqualValidator implements Validator {    constructor( @Attribute('validateEqual') public validateEqual: string,        @Attribute('reverse') public reverse: string) {    }    private get isReverse() {        if (!this.reverse) return false;        return this.reverse === 'true' ? true : false;    }    validate(c: FormControl): { [key: string]: any } {        let v = c.value;        let e = c.root.get(this.validateEqual);        // value not equal        if (e && v !== e.value && !this.isReverse) {            return {                misMatched: true            }        }        // value equal and reverse        if (e && v === e.value && this.isReverse) {            delete e.errors['misMatched'];            if (!Object.keys(e.errors).length) {                e.setErrors(null);            }        }        // value not equal and reverse        if (e && v !== e.value && this.isReverse) {            e.setErrors({                misMatched: true            })        }        return null;    }}
